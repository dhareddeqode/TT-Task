version: '3.8'

volumes:
  local_postgres_data: {}
  redis_data: {}

services:
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${SQL_USER}
      POSTGRES_DB: ${SQL_DATABASE}
      POSTGRES_PASSWORD: ${SQL_PASSWORD}
    networks:
      - orders-hub-network
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      - orders-hub-network
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
    ports:
      - "8000:8000"
    networks:
      - orders-hub-network
    env_file:
      - ./.env
    command:
      - bash
      - -c
      - |
        while !</dev/tcp/postgres/5432; do sleep 1; done;
        while !</dev/tcp/redis/6379; do sleep 1; done;
        python manage.py migrate;
        python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/orders_hub
    depends_on:
      - postgres
      - redis
    restart: always

networks:
  orders-hub-network:
    name: orders-hub-network
